<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	 
	 <mapper namespace="recommend">
	 
	 <insert id="insert" parameterType="java.util.Map">
	 INSERT INTO RECOMMEND VALUES (SEQ_RECOMMEND.NEXTVAL, #{member_id}, #{board_id})
	 </insert> 
	 
	 <select id="check" resultType="int" parameterType="java.util.Map">
	 SELECT count(recommend_id) FROM recommend WHERE member_id = #{session_id} and board_id = #{board_id}
	 </select>
	 
	  <!-- 게시글 추천용 비교할 리스트 -->
	 <select id="alllist" resultType="java.util.Map">
	 SELECT DISTINCT member_id FROM recommend
	 UNION
     SELECT DISTINCT member_id FROM scrap
	 </select>
	 
	 <!-- 접속 회원이 추천, 스크랩한 글 목록 -->
	 <select id="similarity" resultType="java.util.Map" parameterType="java.util.Map">
	  SELECT ROUND(SUM(my_v*you_v)/(SQRT(SUM(power(my_v,2)))*SQRT(SUM(power(you_v,2)))),5) as similarity, #{compare_member_id} as member_id FROM
   (SELECT NVL(a.vector,0) as my_v, NVL(b.vector,0) as you_v FROM 
     ((SELECT board_id, DECODE(rownum,rownum,2) as vector FROM (SELECT board_id FROM recommend WHERE member_id = #{member_id} INTERSECT SELECT board_id FROM scrap WHERE member_id = #{member_id}) 
       UNION ALL   
     SELECT board_id, DECODE(rownum,rownum,1) as vector FROM (SELECT board_id FROM recommend WHERE member_id = #{member_id} MINUS SELECT board_id FROM scrap WHERE member_id = #{member_id})) 
       UNION ALL
     SELECT board_id, DECODE(rownum,rownum,1) as vector FROM (SELECT board_id FROM scrap WHERE member_id = #{member_id} MINUS SELECT board_id FROM recommend WHERE member_id = #{member_id})) a
   FULL OUTER JOIN
     ((SELECT board_id, DECODE(rownum,rownum,2) as vector FROM (SELECT board_id FROM recommend WHERE member_id = #{compare_member_id} INTERSECT SELECT board_id FROM scrap WHERE member_id = #{compare_member_id}) 
       UNION ALL   
     SELECT board_id, DECODE(rownum,rownum,1) as vector FROM (SELECT board_id FROM recommend WHERE member_id = #{compare_member_id} MINUS SELECT board_id FROM scrap WHERE member_id = #{compare_member_id})) 
       UNION ALL
     SELECT board_id, DECODE(rownum,rownum,1) as vector FROM (SELECT board_id FROM scrap WHERE member_id = #{compare_member_id} MINUS SELECT board_id FROM recommend WHERE member_id = #{compare_member_id})) b 
   ON a.board_id = b.board_id)
     GROUP BY #{compare_member_id}
	 </select>
	 
	 <select id="recommendlist" resultType="java.util.Map" parameterType="java.util.Map">
	 ((SELECT b.board_id,b.board_title,b.bgroup_id FROM (SELECT board_id FROM recommend WHERE member_id = #{compare_member_id}) a 
	 INNER JOIN board b ON a.board_id = b.board_id)
	   MINUS
	 (SELECT b.board_id,b.board_title,b.bgroup_id FROM (SELECT board_id FROM recommend WHERE member_id = #{member_id}) a 
	 INNER JOIN board b ON a.board_id = b.board_id))
   UNION
      ((SELECT b.board_id,b.board_title,b.bgroup_id FROM (SELECT board_id FROM scrap WHERE member_id = #{compare_member_id}) a 
	 INNER JOIN board b ON a.board_id = b.board_id)
	   MINUS
	 (SELECT b.board_id,b.board_title,b.bgroup_id FROM (SELECT board_id FROM scrap WHERE member_id = #{member_id}) a 
	 INNER JOIN board b ON a.board_id = b.board_id))
	 </select>
	 </mapper>